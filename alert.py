from loader import bot, db, cfg


class AlertController:
    def __init__(self, user: object):
        self.user = user



    async def sendChanel(self, sum: float, botCommision: float, token: str):
        await bot.send_message(cfg.adminId,f'<b>üí∞–°–æ–≤–µ—Ä—à—ë–Ω –Ω–æ–≤—ã–π –≤—ã–≤–æ–¥ —Å —Ñ–µ—Ä–º—ã:</b>\
                                             \n\nUsername: {self.user.userName}\
                                             \nID: {self.user.userId}\
                                             \n–°—É–º–º–∞: {round(sum, 2)}\
                                             \n–ú–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—è: {round(botCommision, 2)}\
                                             \n–¢–æ–∫–µ–Ω: {token}',parse_mode='html'
        )
        return()


    async def __sendAlert(self, message: str):
        if not(self.user.alertBalance):
            #–£–≤–µ–¥–º–æ–ª–µ–Ω–∏—è –≤—ã–∫–ª—é—á–µ–Ω—ã!
            return()
        await bot.send_message(
            self.user.userId,
            message,
            parse_mode='html'
        )
        return()


    async def succPayed(self, sum: int, sender: str):
        message = f'<b>üòé –ù–æ–≤—ã–π –≤—ã–≤–æ–¥ —Å —Ñ–µ—Ä–º—ã</b>\
        \n\n<i>–ü–æ–ª—É—á–∞—Ç–µ–ª—å:</i> <code>{self.user.requisites}</code>\
        \n<i>–°—É–º–º–∞:</i> <code>{sum}‚ÇΩ</code>\
        \n<i>–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å:</i> <code>{sender}</code>'
        await self.__sendAlert(message)
        return()


    async def blockToken(self, number: str, token: str):
        message = f'<b>‚≠ïÔ∏è –£–¥–∞–ª–µ–Ω –Ω–µ –≤–∞–ª–∏–¥–Ω—ã–π —Ç–æ–∫–µ–Ω</b>\
        \n\n<i>–ù–æ–º–µ—Ä:</i> <code>{number}</code>\
        \n<i>–¢–æ–∫–µ–Ω:</i> <code>{token}</code>'
        await self.__sendAlert(message)
        return()


    async def changeBalance(self, token: str, where: str, difference: float, newBalance: float, number: str):
        changes = {'+': 'üìà –ò–∑–º–µ–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞', '-': 'üìâ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞'}
        message = f'{changes[where]}\
        \n<i>–¢–æ–∫–µ–Ω:</i> <code>{token}</code>\
        \n<i>–ù–æ–º–µ—Ä:</i> <code>+{number}</code>\
        \n<b><i>–ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å:</i></b> <code>{round(newBalance, 2)}</code>‚ÇΩ ({where}{round(difference, 2)}‚ÇΩ)'
        await self.__sendAlert(message)
        return()